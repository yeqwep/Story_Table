local gooey = require 'gooey.gooey'
local kenneyblue = require 'gooey.themes.kenneyblue.kenneyblue'
local data = require('main.data')

local function disablenode(self, node)
    gui.set_enabled(node, false)
end

local function hideleft(self)
    gui.animate(self.node_t, gui.PROP_POSITION, vmath.vector3(-1280, 0, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
end

local function hideright(self)
    gui.animate(self.node_t, gui.PROP_POSITION, vmath.vector3(1280, 0, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
end

local function show(self)
    gui.set_enabled(self.node_t, true)
    gui.animate(self.node_t, gui.PROP_POSITION, vmath.vector3(0, 0, 0), gui.EASING_INOUTQUAD, 0.5)
end

function init(self)
    gooey.acquire_input()
    self.node_t = gui.get_node('title')
    self.valid = data.validsavegame(self)
    kenneyblue.button('start').set_BLEND_MULT(gui.BLEND_MULT)
kenneyblue.button('load').set_BLEND_MULT(gui.BLEND_MULT)
kenneyblue.button('option').set_BLEND_MULT(gui.BLEND_MULT)

    if self.valid == nil then
        print('Not available load data')
    else
        print('Available load data')
    end
end

function on_input(self, action_id, action)
    local group =
        kenneyblue.group(
        'group1',
        function()
            kenneyblue.button(
                'start',
                action_id,
                action,
                function(button)
                    data.newgame = true
                    data.clearsavegame(self)
                    msg.post('main:/handler', 'show_event')
                end
            )
            if data.validsavegame(self) ~= nil then
                kenneyblue.button(
                    'load',
                    action_id,
                    action,
                    function(button)
                        data.newgame = false
                        data.loadgamefile(self)
                        msg.post('main:/handler', 'show_event')
                    end
                )
            end
            kenneyblue.button(
                'option',
                action_id,
                action,
                function(button)
                    hideright(self)
                    data.state = data.STATE_OPTION
                    msg.post('#option', 'show', {})
                end
            )
        end
    )
    return group.consumed
end

function on_message(self, message_id, message, sender)
    if message_id == hash('show') then
        show(self)
    elseif message_id == hash('hideright') then
        hideright(self)
    end
end
